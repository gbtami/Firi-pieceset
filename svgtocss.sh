#!/bin/sh

# Can run sed on svg files to update colors
# hardcoded values in inkscape
GradStart=fad028
GradEnd=856a02
# white gradients overwrite the black ones
wGradStart=ffffff
wGradEnd=999999ff
pieces=(
  +b.svg  b.svg  g.svg  k.svg  +l.svg  l.svg  +n.svg  n.svg  +p.svg  p.svg  +r.svg  r.svg  +s.svg  s.svg
  cn.svg # avoid cn for now as scour generates a buggy corner
   soldier.svg a.svg i.svg u.svg c.svg +a.svg +i.svg +u.svg +c.svg # cannon shogi exclusives
  q.svg) # chess eclusive

chupieces=(lance leopard copper silver gold elephant chariot bishop tiger phoenix kirin sidemover verticalmover rook horse dragon queen lion pawn gobetween king promotedpawn ox stag boar falcon prince eagle whale whitehorse)
# lance leopard copper silver gold elephant chariot bishop tiger phoenix kirin sidemover verticalmover rook horse dragon queen lion pawn gobetween king promotedpawn ox stag boar falcon prince eagle whale whitehorse
# dragonpromoted horsepromoted lionpromoted queenpromoted bishoppromoted elephantpromoted sidemoverpromoted verticalmoverpromoted
# lishogi css: piece.pawn.sente

declare -A lishogicss=(["+b"]="horse" ["b"]="bishop" ["g"]="gold" ["k"]="king" ["+l"]="promotedlance" ["l"]="lance" ["+n"]="promotedknight" ["n"]="knight" ["+p"]="tokin" ["p"]="pawn" ["r"]="rook" ["+r"]="dragon" ["+s"]="promotedsilver" ["s"]="silver" ["q"]="queen")

ODIR=./out/
OCSS=outfile.css
CHUCSS=chu.css
LISHOGICSS=lishogi.css
LICHESSCSS=lichess.css
CannonShogiCSS=cannonshogi.css
if ! command -v scour &> /dev/null; then echo "Scour not found (svg simplifier)" ; exit 1 ; fi

# input file name , base64 value
emitcss() {
  echo "$1 {"
  echo "background-image: url(\"data:image/svg+xml;base64,$2\")!important; }"
}
# Output = (key , p , B64w , B64b)
simplifySVG() { name=$1 ; svg=$2
    b=$ODIR/b$name
    w=$ODIR/w$name
    # optimise svg, often divides size by 4
    scour -i $svg -o $b --remove-metadata #   inkscape --export-type=svg --export-filename=$b $svg
    # write white file by updating gradients in rgba (ff = white)
    sed "s/$GradStart/$wGradStart/g ; s/$GradEnd/$wGradEnd/g" $b > $w

    key=${svg%.svg}
    p=${lishogicss[$key]}
    B64w=$(base64 -w 0 $w)
    B64b=$(base64 -w 0 $b)
}

genCHU() {
  echo '/* Autogenerated by svgtocss, do not edit! */' > $CHUCSS
  echo "@-moz-document domain("lishogi.org") {" >> $CHUCSS
  # echo "${f[@]/*/'prefix'&'suffix'}"
  chupieces=( "${pieces[@]}" "${chupieces[@]/*/'chushogipieces/'&'.svg'}" )
  echo ${chupieces[@]}
  for svg in ${chupieces[@]}; do
    name=svg # name=$(tr + p <<< $svg) # replace + with p
    simplifySVG $name $svg
    if [ -z $p ]; then p=$(basename ${name%.svg}); fi

    emitcss "piece.$p.sente,
    .v-chushogi piece.$p.sente,
    .v-chushogi .sg-wrap.orientation-sente piece.$p.sente,
    .v-chushogi .sg-wrap.orientation-gote piece.$p.sente" $B64b >> $CHUCSS
    emitcss "piece.$p.gote,
    .v-chushogi piece.$p.gote,
    .v-chushogi .sg-wrap.orientation-sente piece.$p.gote,
    .v-chushogi .sg-wrap.orientation-gote piece.$p.gote" $B64w >> $CHUCSS
  done
  echo "}" >> $CHUCSS
}

genAll() {
  echo '/* Autogenerated by svgtocss, do not edit! */' > $OCSS
  echo '/* Autogenerated by svgtocss, do not edit! */' > $LISHOGICSS
  echo '/* Autogenerated by svgtocss, do not edit! */' > $CannonShogiCSS
  echo '/* Autogenerated by svgtocss, do not edit! */' > $LICHESSCSS
  echo "@-moz-document domain("lichess.org") {" > $LICHESSCSS
  echo "@-moz-document domain("pychess.org") {" > $CannonShogiCSS

  for svg in ${pieces[@]}; do
    name=$(tr + p <<< $svg) # replace + with p
    simplifySVG $name $svg

    # lichess
    chessieces=("p" "r" "cn" "b" "q" "k")
    if [[ ${chessPieces[*]} =~ $key ]] then
      cp=$p
      if [[ $key = "cn" ]]; then cp=knight; fi # Use shogi 马 not 桂
      emitcss "piece.$cp.white" $B64w >> $LICHESSCSS
      emitcss "piece.$cp.black" $B64b >> $LICHESSCSS
      if [[ $key = "q" || $key = "cn" ]] then continue; fi
    fi

    # pychess
    p=$(tr + p <<< $key)
    # elem of a bash array is idiotically a regex
    cannonPieces=("a" "u" "i" "c") # "soldier" # silver,gold,iron,copper
    csp=$p
    if [ $key != "p" ]; then
     if [ $key = "soldier" ]; then csp="p"; fi # ! will continue loop
     emitcss ".cannonshogi piece.$csp-piece.white.ally"  $B64b >> $CannonShogiCSS
     emitcss ".cannonshogi piece.$csp-piece.white.enemy" $B64b >> $CannonShogiCSS
     emitcss ".cannonshogi piece.$csp-piece.black.ally"  $B64w >> $CannonShogiCSS
     emitcss ".cannonshogi piece.$csp-piece.black.enemy" $B64w >> $CannonShogiCSS
     if [[ "${cannonPieces[*]}" =~ "$key" || $key = soldier ]]; then continue; fi
    fi

    # pychess
    emitcss ".shogi piece.$p-piece.white.ally"  $B64b >> $OCSS
    emitcss ".shogi piece.$p-piece.white.enemy" $B64b >> $OCSS
    emitcss ".shogi piece.$p-piece.black.ally"  $B64w >> $OCSS
    emitcss ".shogi piece.$p-piece.black.enemy" $B64w >> $OCSS

    # lishogi
    emitcss "piece.$p.sente,
    .v-kyotoshogi piece.$p.sente,
    .v-kyotoshogi .sg-wrap.orientation-sente piece.$p.sente,
    .v-kyotoshogi .sg-wrap.orientation-gote piece.$p.sente" $B64b >> $LISHOGICSS
    emitcss "piece.$p.gote,
    .v-kyotoshogi piece.$p.gote,
    .v-kyotoshogi .sg-wrap.orientation-sente piece.$p.gote,
    .v-kyotoshogi .sg-wrap.orientation-gote piece.$p.gote" $B64w >> $LISHOGICSS

  done
  echo "}" >> $LICHESSCSS
  echo "}" >> $CannonShogiCSS
}

genCHU

