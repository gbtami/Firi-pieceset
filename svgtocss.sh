#!/bin/sh

# Can run sed on svg files to update colors
# hardcoded values in inkscape
GradStart=fad028
GradEnd=856a02
# white gradients overwrite the black ones
wGradStart=ffffff
wGradEnd=9c9c9cff

ODIR=./out/
OCSS=outfile.css
if ! command -v inkscape &> /dev/null; then echo "Inkscape not found" ; exit 1 ; fi

# input file , output file
base64SVG() {
  inkscape --export-type=svg --export-filename=$2 $1
  BASE64_ENCODED=$(base64 -w 0 "$2")
}

# input file , output file , gradient start , gradient end
base64RegradientSVG() {
  inkscape --export-type=svg --export-filename=$2 $1
# sed "s/$GradStart/$3/g ; s/$GradEnd/$4/g" -i $2
  BASE64_ENCODED=$(base64 -w 0 "$2")
}

# input file name , base64 value
emitcss() {
  echo ".shogi piece.$1 {"
  echo "background-image: url(\"data:image/svg+xml;base64,$2\"); }"
}

genAll() {
  echo '/* Autogenerated by svgtocss, do not edit! */' > $OCSS
  for svg in *.svg; do
    name=$(tr + p <<< $svg) # replace + with p
    b=$ODIR/b$name
    w=$ODIR/w$name
    # write black piece file
    inkscape --export-type=svg --export-filename=$b $svg
    # write white file by updating gradients in rgba (ff = white)
    sed "s/$GradStart/$wGradStart/g ; s/$GradEnd/$wGradEnd/g" $b > $w

    B64w=$(base64 -w 0 $w)
    emitcss "${name%.svg}-piece.white.ally"  $B64w >> $OCSS
    emitcss "${name%.svg}-piece.white.enemy" $B64w >> $OCSS
    B64b=$(base64 -w 0 $b)
    emitcss "${name%.svg}-piece.black.ally"  $B64b >> $OCSS
    emitcss "${name%.svg}-piece.black.enemy" $B64b >> $OCSS
  done
}

genAll
