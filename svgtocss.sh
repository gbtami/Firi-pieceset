#!/bin/sh

# Can run sed on svg files to update colors
# hardcoded values in inkscape
GradStart=fad028
GradEnd=856a02
# white gradients overwrite the black ones
wGradStart=ffffff
wGradEnd=999999ff
pieces=(+b.svg  b.svg  g.svg  k.svg  +l.svg  l.svg  +n.svg  n.svg  +p.svg  p.svg  +r.svg  r.svg  +s.svg  s.svg)

# lishogi css: piece.pawn.sente
declare -A lishogicss=(["+b"]="horse" ["b"]="bishop" ["g"]="gold" ["k"]="king" ["+l"]="promotedlance" ["l"]="lance" ["+n"]="promotedknight" ["n"]="knight" ["+p"]="tokin" ["p"]="pawn" ["r"]="rook" ["+r"]="dragon" ["+s"]="promotedsilver" ["s"]="silver")

ODIR=./out/
OCSS=outfile.css
LISHOGICSS=lishogi.css
if ! command -v inkscape &> /dev/null; then echo "Inkscape not found" ; exit 1 ; fi

# input file , output file
base64SVG() {
  inkscape --export-type=svg --export-filename=$2 $1
  BASE64_ENCODED=$(base64 -w 0 "$2")
}

# input file , output file , gradient start , gradient end
base64RegradientSVG() {
  inkscape --export-type=svg --export-plain-svg --export-filename=$2 $1
# sed "s/$GradStart/$3/g ; s/$GradEnd/$4/g" -i $2
  BASE64_ENCODED=$(base64 -w 0 "$2")
}

# input file name , base64 value
emitcss() {
  echo "$1 {"
  echo "background-image: url(\"data:image/svg+xml;base64,$2\")!important; }"
}

genAll() {
  echo '/* Autogenerated by svgtocss, do not edit! */' > $OCSS
  echo '/* Autogenerated by svgtocss, do not edit! */' > $LISHOGICSS

  for svg in ${pieces[@]}; do
    name=$(tr + p <<< $svg) # replace + with p
    b=$ODIR/b$name
    w=$ODIR/w$name
    # write black piece file
    inkscape --export-type=svg --export-filename=$b $svg
    # write white file by updating gradients in rgba (ff = white)
    sed "s/$GradStart/$wGradStart/g ; s/$GradEnd/$wGradEnd/g" $b > $w

    B64w=$(base64 -w 0 $w)
    B64b=$(base64 -w 0 $b)
    # pychess
    emitcss ".shogi piece.${name%.svg}-piece.white.ally"  $B64w >> $OCSS
    emitcss ".shogi piece.${name%.svg}-piece.white.enemy" $B64w >> $OCSS
    emitcss ".shogi piece.${name%.svg}-piece.black.ally"  $B64b >> $OCSS
    emitcss ".shogi piece.${name%.svg}-piece.black.enemy" $B64b >> $OCSS

    # lishogi
    key=${svg%.svg}
    p=${lishogicss[$key]}
    emitcss "piece.$p.sente,
    .v-kyotoshogi piece.$p.sente,
    .v-kyotoshogi .sg-wrap.orientation-sente piece.$p.sente,
    .v-kyotoshogi .sg-wrap.orientation-gote piece.$p.sente" $B64b >> $LISHOGICSS
    emitcss "piece.$p.gote,
    .v-kyotoshogi piece.$p.gote,
    .v-kyotoshogi .sg-wrap.orientation-sente piece.$p.gote,
    .v-kyotoshogi .sg-wrap.orientation-gote piece.$p.gote" $B64w >> $LISHOGICSS

#   emitcss "piece.$p.sente,
#     .sg-wrap.orientation-sente piece.$p.sente,
#     .sg-wrap.orientation-gote piece.$p.gote,
#     .hand-bottom piece.$p.gote,
#     .spare-bottom piece.$p.gote" $B64w >> $LISHOGICSS
#   emitcss "piece.$p.gote,
#     .sg-wrap.orientation-sente piece.$p.gote,
#     .sg-wrap.orientation-gote piece.$p.sente,
#     .hand-top piece.$p.sente,
#     .spare-top piece.$p.sente" $B64b >> $LISHOGICSS
  done
}

genAll
